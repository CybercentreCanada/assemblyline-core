name: tests

trigger: ["*"]
pr: ["*"]

pool:
  vmImage: "ubuntu-20.04"

variables:
  # Try to checkout the matching branch, if the command fails, don't care.
  BRANCH_NAME: $[coalesce(variables['System.PullRequest.SourceBranch'], variables['System.PullRequest.TargetBranch'], replace(variables['Build.SourceBranch'], 'refs/heads/', ''))]

resources:
  containers:
    - container: redis
      image: redis
      ports:
        - 6379:6379
    - container: elasticsearch
      image: cccs/elasticsearch:8.10.2
      env:
        ES_JAVA_OPTS: "-Xms512m -Xmx512m"
        DISCOVERY_TYPE: "single-node"
        ELASTIC_PASSWORD: "devpass"
      ports:
        - 9200:9200
  repositories:
    - repository: assemblyline-base
      type: github
      endpoint: github-repo-sa
      name: CybercentreCanada/assemblyline-base

jobs:
  - job: run_test
    strategy:
      matrix:
        Python3_9:
          python.version: "3.9"
        Python3_10:
          python.version: "3.10"
        Python3_11:
          python.version: "3.11"
        Python3_12:
          python.version: "3.12"
    timeoutInMinutes: 10
    services:
      elasticsearch: elasticsearch
      redis: redis

    steps:
      - task: UsePythonVersion@0
        displayName: Set python version
        inputs:
          versionSpec: "$(python.version)"
      - checkout: self
      - checkout: assemblyline-base
      - script: |
          sudo apt-get update
          sudo apt-get install -y build-essential libffi-dev libfuzzy-dev python3-dev git
          sudo mkdir -p /etc/assemblyline/
          sudo mkdir -p /var/cache/assemblyline/
          sudo cp pipelines/config.yml /etc/assemblyline
          sudo chmod a+rw /var/cache/assemblyline/
          sudo env "PATH=$PATH" python -m pip install --no-cache-dir -U pip cython setuptools wheel
        workingDirectory: $(Pipeline.Workspace)/s/assemblyline-core
        displayName: Setup Environment
      - script: |
          set -xv
          git checkout -b $BRANCH_NAME -t origin/$BRANCH_NAME || true
          git status
          sudo env "PATH=$PATH" python -m pip install --no-cache-dir -e .
        displayName: Install assemblyline
        workingDirectory: $(Pipeline.Workspace)/s/assemblyline-base
      - script: |
          sudo env "PATH=$PATH" python -m pip install --no-cache-dir -e .[test]
        displayName: Install assemblyline_core
        workingDirectory: $(Pipeline.Workspace)/s/assemblyline-core
      - script: sudo env "PATH=$PATH" python -m pytest -x -rsx -vv
        displayName: Test
        workingDirectory: $(Pipeline.Workspace)/s/assemblyline-core
